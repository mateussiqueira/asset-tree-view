// Mocks generated by Mockito 5.4.5 from annotations
// in asset_tree_app/test/feature/assets/presentation/viewmodel/assets_viewmodel_test.mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:asset_tree_app/core/core.dart' as _i2;
import 'package:asset_tree_app/feature/assets/data/services/assets_service.dart'
    as _i6;
import 'package:asset_tree_app/feature/assets/data/services/company_service.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpAdapter_0 extends _i1.SmartFake implements _i2.HttpAdapter {
  _FakeHttpAdapter_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CompanyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompanyService extends _i1.Mock implements _i3.CompanyService {
  MockCompanyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpAdapter get httpAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpAdapter),
            returnValue: _FakeHttpAdapter_0(
              this,
              Invocation.getter(#httpAdapter),
            ),
          )
          as _i2.HttpAdapter);

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  _i5.Future<List<dynamic>> fetchCompanies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchCompanies, []),
            returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i5.Future<List<dynamic>>);
}

/// A class which mocks [AssetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetService extends _i1.Mock implements _i6.AssetService {
  MockAssetService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpAdapter get httpAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpAdapter),
            returnValue: _FakeHttpAdapter_0(
              this,
              Invocation.getter(#httpAdapter),
            ),
          )
          as _i2.HttpAdapter);

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  _i5.Future<Map<String, dynamic>> fetchLocationsAndAssets(String? companyId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchLocationsAndAssets, [companyId]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);
}
